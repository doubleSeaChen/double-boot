<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.system.dao.RoleMenuDao">

	<resultMap id="roleResultMap" type="com.system.domain.RoleMenuDO">
		<id property="id" column="id"/>
		<id property="roleId" column="role_id"/>
		<id property="menuId" column="menu_id"/>
	</resultMap>

	<select id="get" resultType="com.system.domain.RoleMenuDO">
		select `id`,`role_id`,`menu_id` from role_menu where id = #{value}
	</select>

	<select id="getByRoleId" resultMap="roleResultMap">
		select `id`,`role_id`,`menu_id` from role_menu where role_id = #{value}
	</select>

	<select id="list" resultType="com.system.domain.RoleMenuDO">
		select `id`,`role_id`,`menu_id` from role_menu
		<where>
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
			<if test="menuId != null and menuId != ''"> and menu_id = #{menuId} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from role_menu
		<where>
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
			<if test="menuId != null and menuId != ''"> and menu_id = #{menuId} </if>
		</where>
	</select>

	<insert id="save" parameterType="com.system.domain.RoleMenuDO">
		insert into role_menu
		(
		`id`,
		`role_id`,
		`menu_id`
		)
		values
		(
		#{id},
		#{roleId},
		#{menuId}
		)
	</insert>

	<update id="update" parameterType="com.system.domain.RoleMenuDO">
		update role_menu
		<set>
			<if test="roleId != null">`role_id` = #{roleId}, </if>
			<if test="menuId != null">`menu_id` = #{menuId}</if>
		</set>
		where id = #{id}
	</update>

	<delete id="remove">
		delete from role_menu where id = #{value}
	</delete>

	<delete id="removeByRoleId">
		delete from role_menu where role_id = #{value}
	</delete>

	<delete id="batchRemove">
		delete from role_menu where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>